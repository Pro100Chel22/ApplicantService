@model AmdinPanelMVC.Models.EducationDocumentViewModel

<div class="row justify-content-center h-100">
    <div class="col-md-8 col-lg-6 d-flex flex-column h-100 ">
        <h2>Документ об образовании</h2>
        <hr />

        <form id="educationDocumentFormId" class="row g-3">
            <div class="col-12">
                <label for="nameId" class="form-label">Название</label>
                <input name="name" id="nameId" type="text" class="form-control" value="@Model.EducationDocument.Name">
                <span class="text-danger"></span>
            </div>
            <div class="col-12">
                <label for="documentTypeId" class="form-label">Тип документа</label>
                <select id="documentTypeId" name="educationDocumentTypeId" class="form-control" disabled>
                    <option value="@Model.EducationDocument.EducationDocumentType.Id" selected>@Model.EducationDocument.EducationDocumentType.Name</option>
                    @* @await Component.InvokeAsync("DocumentTypes", Model.EducationDocument.EducationDocumentType.Id) *@
                </select>
                <span class="text-danger"></span>
            </div>
@*             <div class="col-12">
                <div><span class="text-secondary">Текущий уровень образования:</span> </div>
            </div>
            <div class="col-12">
                <div><span class="text-secondary">Следующие уровни образования:</span> </div>
            </div> *@
            
            @if (Model.CanEdit)
            {
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary">Сохранить</button>
                </div>
            }
        </form>

        <hr />

        <div id="scansContainerId">
            @{
                await Html.RenderPartialAsync("_Scans", new ScansViewModel() { Scans = Model.EducationDocument.Scans, CanEdit = Model.CanEdit});
            }
        </div>

    </div>
</div>

@section Scripts {
    <script src="~/js/documents.js"></script>

    <script>
        const applicant = @Html.Raw(Json.Serialize(Model.ApplicantId));
        setApplicantId(applicant);

        const educationDocument = @Html.Raw(Json.Serialize(Model.EducationDocument.Id));
        setDocumentId(educationDocument);

        const edit = @Html.Raw(Json.Serialize(Model.CanEdit));
        setCanEdit(edit);
    </script>
}